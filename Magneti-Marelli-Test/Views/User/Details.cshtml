@model Magneti_Marelli_Test.Models.User

@using Magneti_Marelli_Test.Utility;

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>
    .modal-content {
        width: 800px !important;
        margin: 30px auto !important;
    }
</style>

<div>
    <div class="row">
        <div class="col-xs-12">

            <h1 class="page-header text-center">
                User <span>Details</span>
            </h1>

        </div>
    </div>
    <div class="dl-horizontal">
        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.LastLogon)
                    </label>
                </span>

                <span class="col-xs-6">
                    @if (@Model.LastLogon.HasValue)
                    {
                        @Model.LastLogon.Value.ToString("dd/MM/yyyy")
                    }
                </span>
            </div>
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.LastPasswordChange)
                    </label>
                </span>

                <span class="col-xs-6">
                    @if (@Model.LastPasswordChange.HasValue)
                    {
                        @Model.LastPasswordChange.Value.ToString("dd/MM/yyyy")
                    }
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.LoginName)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("Login Name", Model.LoginName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LoginName)
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.DisplayName)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("DisplayName", Model.DisplayName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DisplayName)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("FirstName", Model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.LastName)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("LastName", Model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-12">
                <span class="col-xs-2">
                    <label>
                        @Html.DisplayNameFor(model => model.Description)
                    </label>
                </span>

                <span class="col-xs-9">
                    @Html.TextArea("Description", Model.Description, new { @class = "form-control", rows = 10 })
                    @Html.ValidationMessageFor(model => model.Description)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.Mail)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("Mail", Model.Mail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Mail)
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.Phone)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("Phone", Model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.City)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("City", Model.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City)
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.Country)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("Country", Model.Country, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Country)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.ExpirationDate)
                    </label>
                </span>
                <span class="col-xs-6">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            <span class="fa fa-calendar"></span>
                        </span>
                        @Html.TextBoxFor(model => model.ExpirationDate, new { @class = "form-control expiration-date adjust-width", id = "expDate" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.ManagerLoginName)
                    </label>
                </span>
                <span class="col-xs-6">
                    @Html.EditorFor(model => model.ManagerDisplayName, new { htmlAttributes = new { @class = "form-control", @id = "ManagerLabelDisplayName", @readonly = "readonly" } })
                    @Html.EditorFor(model => model.ManagerLoginName, new { htmlAttributes = new { @class = "form-control", @id = "ManagerId", style = "display:none" } })
                    @Html.ValidationMessageFor(n => n.ManagerLoginName)
                </span>
                <span class="col-xs-2">
                    <button id="modal" class="btn btn-default"> Add/Modify Manager</button>
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">
            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.BL)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("BL", Model.BL, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BL)
                </span>
            </div>

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.Site)
                    </label>
                </span>

                <span class="col-xs-6">
                    @Html.TextBox("Site", Model.Site, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Site)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:10px;">

            <div class="col-xs-6">
                <span class="col-xs-4">
                    <label>
                        @Html.DisplayNameFor(model => model.IsDisable)
                    </label>
                </span>
                <span class="col-xs-6">
                    @Html.CheckBoxFor(model => model.IsDisable)
                </span>
            </div>
        </div>

        <div class="row" style="margin-top:40px;">
            <span class="col-xs-2">
                <span class="col-xs-12">
                    @Ajax.RawActionLink(string.Format("<i class='fa fa-user-times'></i> Save User"), "Save", "User", new { userId = Model.LoginName }, new AjaxOptions { HttpMethod = "GET" }, new { @class = "btn btn-sm btn-primary" })
                </span>
            </span>
            <span class="col-xs-2">
                <span class="col-xs-12">
                    @Ajax.RawActionLink(string.Format("<i class='fa fa-user-times'></i> Delete User"), "Delete", "User", new { userId = Model.LoginName }, new AjaxOptions { HttpMethod = "GET" }, new { @class = "btn btn-sm btn-danger" })
                </span>
            </span>
            <span class="col-xs-2">
                <span class="col-xs-12">
                    @Ajax.RawActionLink(string.Format("<i class='fa fa-refresh'></i> Reset Password"), "ResetPassword", "User", new { userId = Model.LoginName }, new AjaxOptions { HttpMethod = "GET" }, new { @class = "btn btn-sm btn-default" })
                </span>
            </span>
        </div>
    </div>
</div>

<div>
    <div class="row">
        <div class="col-xs-12">

            <h1 class="page-header text-center">
                User <span>Groups</span>
            </h1>

        </div>
    </div>
    <div class="dl-horizontal">
        <span class="row">
            <table id="grid" class="display compact" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Remove
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.Groups)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(g => group.DistinguishedName)
                            </td>
                            <td>
                                @Html.DisplayFor(g => group.Name)
                            </td>
                            <td>
                                @Ajax.RawActionLink(string.Format("<i class='fa fa-minus'></i> Remove"), "RemoveGroups", "User", new { groupId = group.DistinguishedName, userId = Model.LoginName }, new AjaxOptions { HttpMethod = "POST" }, new { @class = "btn btn-sm btn-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </span>


        <span class="row">
            <span>
                @Ajax.RawActionLink(string.Format("<i class='fa fa-plus-square-o'></i> Add Groups"), "GetModal", "Group", new { Id = Model.LoginName }, null, new
           {  @* Needed to link to the html of the modal*@
                data_target = "#modal-container",
                @* Tells the bootstrap javascript to do its thing*@
               data_toggle = "modal",
               @class = "btn btn-primary"
           })
                @*@Html.ActionLink("Add Groups", "GetModal", "Group", new { Id = Model.UserId }, new
                    {
                     @* Needed to link to the html of the modal*@
                @*data_target = "#modal-container",*@
                @* Tells the bootstrap javascript to do its thing*@
                @*data_toggle = "modal",*@
                @*@class = "btn btn-primary fa fa-plus-square-o"*@
                @* })*@
            </span>
        </span>
    </div>
</div>



<p>

    @Html.ActionLink("Back to List", "Index", "User")
</p>


<div id="modal-container" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

        </div>
    </div>
</div>


<div id="mymodal" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Add/Modify Manager</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">

                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            <span class="fa fa-search"></span>
                        </span>
                        <input type="text" id="qry" class="form-control" placeholder="Username" aria-describedby="basic-addon1">

                        <button class="btn btn-primary" id="searchManagerButton" style="margin-left:20px;">Search</button>
                    </div>



                    <div id="modal-content" style="margin-top:10px;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">OK</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">NO</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {

            var pageSize = 20;

           var optionListUrl = '@Url.Action("GetManagerList", "User")';

           //Method which is to be called for populating options in dropdown //dynamically
           @*$('#managerId').append($('<option>', {
               value: @Model.ManagerLoginName,
               text: "@Model.ManagerDisplayName"
           }));*@

           $("#modal").click(function () {

               $('#mymodal').modal('toggle');
               return false;
           })

           $('#searchManagerButton').click(function () {

               //Get the id to delete from the hidden field
               var qry = $('#qry').val();

               $.ajax({
                   url: "/User/QueryManager",
                   type: "POST",
                   data: {
                       searchTerm: qry
                   },
                   success: function (data) {
                       // your data could be a View or Json or what ever you returned in your action method
                       // parse your data here
                       $("#modal-content").html(data);

                       $('#gridUser').DataTable({
                           "pagingType": "full_numbers",
                           searching: false
                       });
                   }
               });


           });
            
           $('#grid').DataTable({
               "pagingType": "full_numbers",
               searching: false,
               "columns": [
                   { "width": "40%" },
                   { "width": "40%" },
                   { "width": "20%" }
               ]
           });

           var d = $('.expiration-date').datetimepicker({
               format: "DD/MM/YYYY"
           });

           //add for jquery validation in Chrome that accept only MM/DD/YYYY DateFormat
           jQuery.validator.methods["date"] = function (value, element) {

               var dateRegex = /^(0?[1-9]\/|[12]\d\/|3[01]\/){2}(19|20)\d\d$/;
               return this.optional(element) || dateRegex.test(value);

           }

        });

        function AddOrModifyManager(ManagerLoginName, ManagerDisplayName) {

            $("#ManagerLabelDisplayName").text(ManagerDisplayName)
            $("#ManagerLabelDisplayName").val(ManagerDisplayName)
            $("#ManagerId").val(ManagerLoginName);
            $("#ManagerId").text(ManagerLoginName);
            $('#mymodal').modal('toggle');
        }
    </script>
}


